services:
  # Angular Client Service
  client:
    build:
      context: ./angular-client
      args:
        KENDO_LICENSE: ${TELERIK_LICENSE}
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      - server

  # Node.js Server Service
  server:
    build:
      context: ./server
    ports:
      - "3000:3000"
    environment:
      - PGHOST=${PGHOST} 
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
    networks:
      - app-network

  # PostgreSQL Database Service
  db:
    image: postgres:16
    restart: always
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
